name: CI/CD eShop

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]

env:
  build_config: Release      
  registry_name: lfraileacr.azurecr.io
  repository_name: eshop-web
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration $build_config
    
    - name: Build docker image
      uses: docker/build-push-action@v1.1.1
      with:
        registry: ${{ env.registry_name }}
        username: ${{ secrets.ACR_USER_NAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        repository: ${{ env.repository_name }}
        tags: ${{ github.sha }}
        path: .
        dockerfile: src/Web/Dockerfile
        add_git_labels: true
        
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.402
    
    - name: Install dotnet tools
      run: dotnet tool restore
    
    - name: Catalog SQL Script
      run: dotnet ef migrations script -c catalogcontext -i -p ./src/Infrastructure/Infrastructure.csproj -s ./src/Web/Web.csproj -o ./scripts/catalog.sql
    
    - name: Identity SQL Script
      run: dotnet ef migrations script -c appidentitydbcontext  -i -p ./src/Infrastructure/Infrastructure.csproj -s ./src/Web/Web.csproj -o ./scripts/identity.sql
    
    - name: Upload scripts
      uses: actions/upload-artifact@v2
      with:
        name: sql_scripts
        path: ./scripts
        
    - name: Upload ARM
      uses: actions/upload-artifact@v2
      with:
        name: arm_template
        path: arm
        
  deploy:       
    if: github.ref == 'refs/heads/main' 
    needs: build
    runs-on: ubuntu-latest  
    environment: dockerwebapp
    env:
      RESOURCE_GROUP: NetCore_GIthubCI_CD_RG
    steps:
    - name: Download arm
      uses: actions/download-artifact@v4.1.7
      with:
        name: arm_template
        path: arm_template
    
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Azure CLI Action
      uses: Azure/cli@1.0.4
      with:        
        inlineScript: az group create --location westeurope --resource-group $RESOURCE_GROUP

    - name: Deploy Azure Resource Manager (ARM) Template
      continue-on-error: true
      uses: Azure/arm-deploy@v1
      with:        
        scope: resourcegroup
        subscriptionId: '26da47a8-c28d-4564-ae8e-8ba88e995a0a'        
        resourceGroupName: ${{ env.RESOURCE_GROUP }}
        template: arm_template/netcore_rg_arm.json       
        deploymentMode: Incremental
        deploymentName: deploy-docker-${{ github.sha  }}
        parameters: catalogConnstring="${{ secrets.CATALOG_DB_CONNSTRING }}" identityConnstring="${{ secrets.IDENTITY_DB_CONNSTRING }}" sites_netcoregithub_name=netcoreghdck serverfarms_netcoregithubplan_name=netcoregithubplan sqlserver_password=${{ secrets.DB_PASSWORD }} dockerRegistryUrl=${{ env.registry_name }} dockerRegistryUsername=${{ secrets.ACR_USER_NAME }} dockerRegistryPassword=${{ secrets.ACR_PASSWORD }} dockerImage=${{ env.registry_name }}/${{ env.repository_name }}:${{ github.sha }}

  deploydb:  
    if: github.ref == 'refs/heads/main'        
    needs: deploy
    runs-on: windows-latest  
    environment: database
    
    steps:      
    - name: Download scripts
      uses: actions/download-artifact@v4.1.7
      with:
        name: sql_scripts
        path: sql_scripts
    
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}    
        
    - name: Azure SQL Deploy
      uses: Azure/sql-action@v1
      with:
        server-name: netcoregithub.database.windows.net
        connection-string: ${{ secrets.CATALOG_DB_CONNSTRING }}
        sql-file: sql_scripts/catalog.sql
        
    - name: Azure SQL Deploy
      uses: Azure/sql-action@v1
      with:
        server-name: netcoregithub.database.windows.net
        connection-string: ${{ secrets.IDENTITY_DB_CONNSTRING }}
        sql-file: sql_scripts/identity.sql

